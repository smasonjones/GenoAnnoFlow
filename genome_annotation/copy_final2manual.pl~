#!env perl
use strict;
use warnings;
my $debug = 1;
my $debug_one = 0;
my $force = 0;
my $dest = shift || "../private_genomes/download";
my $dir = shift || "genomes";

opendir(DIR, $dir) || die $!;
for my $f ( readdir(DIR) ) {
    next if $f =~ /^\./;
    if( ! -d "$dir/$f" ) {
 	warn("not a dir ($dir/$f)\n");
	next;
    }
    mkdir("$dest/$f") unless -d "$dest/$f";
    opendir(FAM,"$dir/$f") || die $!;
    for my $sp ( readdir(FAM) ) {
	next if $sp =~ /^\./;
	next if ( ! -d "$dir/$f/$sp");
	warn("sp is $dir/$f/$sp\n") if $debug;

	unless ( -d "$dir/$f/$sp/MAKER") {
	    warn("no MAKER result dir for dir $dir/$f/$sp -expecting-> MAKER");
	    next;
	} 
	mkdir("$dest/$f/$sp") unless -d "$dest/$f/$sp";
	opendir(M,"$dir/$f/$sp/MAKER") || die "$dir/$f/$sp/MAKER $!";	
	for my $file ( readdir(M) ) {
		if( $file =~ /(\S+)\.all\.functional.gff$/ ) {
		    my $stem = $1;
		    open(GFF, "< $dir/$f/$sp/MAKER/$file") || die "cannot open GFF file: $dir/$f/$sp/MAKER/$file";
		    open(OUTGFF, ">$dest/$f/$sp/$sp.gff3") || die "Cannot open $dest/$f/$sp/$sp.gff3";
		    while(<GFF>) {
			last if /^\#FASTA/;
			if( /^\##gff-version/ ) {
			    print OUTGFF $_;
			}
			my @row = split(/\t/,$_);			
			next if @row == 1;

			if( $row[1] eq 'maker' ) {
			    print OUTGFF $_;
			}
		    }
		} elsif( $file =~ /(\S+)\.maker\.proteins\.functional\.fasta/ ) {		    
		    my $stem = $1;
		    
		} elsif( $file =~ /(\S+)\.maker\.transcripts\.functional\.fasta/ ) {
		    my $stem = $1;
		}
	}
    }
}
